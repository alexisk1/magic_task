// Copyright 2019 The MediaPipe Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package mediapipe;

import "mediapipe/framework/calculator.proto";
import "mediapipe/util/color.proto";

message PoseLandmarksToWaveCounterCalculatorOptions {
  extend CalculatorOptions {
    optional PoseLandmarksToWaveCounterCalculatorOptions ext = 271666666;
  }

  // Colors for drawing the label(s).
  optional Color color = 1;

  // Thickness for drawing the label(s).
  optional double thickness = 2 [default = 2];

  // The font height in absolute pixels.
  optional int32 font_height_px = 3 [default = 50];

  // The offset of the starting text in horizontal direction in absolute pixels.
  optional int32 horizontal_offset_px = 7 [default = 0];
  // The offset of the starting text in vertical direction in absolute pixels.
  optional int32 vertical_offset_px = 8 [default = 0];

  // The time to wait for the running mean to settle down
  optional int32 pre_settled_time = 4 [default = 8];

  // The minimum time required for a hand to be before or
  // after the running mean
  optional int32 min_half_cycle = 6 [default = 4];

  // The minimum time required for running meaning samples
  // before classification can start on
  optional int32 min_classify_samples = 9 [default = 17];
  

  // Specifies the font for the text. Font must be one of the following from
  // OpenCV:
  // cv::FONT_HERSHEY_SIMPLEX (0)
  // cv::FONT_HERSHEY_PLAIN (1)
  // cv::FONT_HERSHEY_DUPLEX (2)
  // cv::FONT_HERSHEY_COMPLEX (3)
  // cv::FONT_HERSHEY_TRIPLEX (4)
  // cv::FONT_HERSHEY_COMPLEX_SMALL (5)
  // cv::FONT_HERSHEY_SCRIPT_SIMPLEX (6)
  // cv::FONT_HERSHEY_SCRIPT_COMPLEX (7)
  optional int32 font_face = 5 [default = 0];

}
